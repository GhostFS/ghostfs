{"name":"Ghost File System","tagline":"Ghost File System or simply GhostFS","body":"### Welcome to GhostFS Page.\r\n\r\nSay hi to our mascot, his name is Ghoster:\r\n    ![](https://github.com/raphaelsc/ghostfs/blob/master/images/ghoster.jpg)\r\n\r\nFile system created to allow an user to randomly access content of a remote\r\nfile as if the file were stored locally.\r\n\r\nWhat does make GhostFS different than other network-based file systems?\r\nTo answer that, let me first introduce a new term:\r\nGhost File: Think of it as a symbolic link that is linked to a remote file.\r\nGhostFS allows coexistence of ghost files that are linked to remote files from\r\ndifferent servers that use different protocols.\r\nGhostFS was also designed to easily support new protocols, even those ones that\r\nhave no notion of files, such as SQL. GhostFS can also be seen as a powerful\r\ntool to interact with cloud storage services, such as Google Drive and Dropbox.\r\n\r\nOnly HTTP and HTTPS protocols are supported at the moment, but the goal is to\r\nadd support to other protocols, such as FTP, SCP and even SQL.\r\n\r\nGhostFS takes advantange of Linux filesystem interface to allow users to use\r\ntheir existing tools on files stored in a GhostFS mount point.\r\n\r\n### How to build it?\r\n\r\nInstalling required packages for:\r\n\r\nFedora:\r\n\r\n```\r\n    yum install -y fuse fuse-devel libcurl libcurl-devel\r\n```\r\nDebian:\r\n\r\n```\r\n    apt-get install -y curl libcurl-dev fuse libfuse-dev libboost-all-dev\r\n```\r\n\r\nBuild the project with:\r\n\r\n```\r\n    cmake .; make;\r\n```\r\n\r\nInstall with:\r\n\r\n```\r\n    sudo make install\r\n```\r\n\r\nCreate a deb or rpm package with:\r\n\r\n```\r\n    sudo make package\r\n```\r\n\r\n### How to use it?\r\n\r\n1) Mount the file system:\r\n\r\n```\r\n    ./ghostfs /path/to/mount/point\r\n```\r\n\r\n2) Create an empty file:\r\n\r\n```\r\n    touch /path/to/mount/point/<file>\r\n```\r\n\r\n3) Set attribute url of the empty file using extended attribute:\r\n\r\n```\r\n    setfattr -n url -v http://<address> /path/to/mount/point/<file>\r\n```\r\n\r\nFor debugging, GhostFS may be mounted as follow:\r\n\r\n```\r\n    ./ghostfs -d /path/to/mount/point\r\n```\r\n\r\nSteps 1, 2 and 3 can be done in a single step with:\r\n\r\n```\r\n    ./gmount /path/to/mount/point http://<address> <file>\r\n```\r\n\r\nAnd that's all. Now you can randomly access content of the remote file.\r\n\r\nFor example, let's do that with a remote video file:\r\n\r\n1) Mount the file system:\r\n\r\n```\r\n    mkdir ./my_ghost_fs; ./ghostfs ./my_ghost_fs\r\n```\r\n\r\n2) Create a file in ./my_ghost_fs pointing to the remote video:\r\n\r\n```\r\n    touch ./my_ghost_fs/video.mp4\r\n    setfattr -n url -v \\\r\n    http://bollywoodmp4.net/videos/2016/saala-khadoos/hq/saala-khadoos-bollywoodmp4-net.mp4 \\\r\n    ./my_ghost_fs/video.mp4\r\n```\r\n\r\nNow you can watch the video by opening ./my_ghost_fs/video.mp4\r\n\r\nNOTE: In the future, we may replace extended attribute with symbolic link, so\r\nstep 2 and 3 (of 'How to use it?') would be replaced by:\r\n\r\n```\r\n    ln -s /path/to/mount/point/<file> http://<address>\r\n```\r\n\r\nSimpler, no?\r\n\r\nNOTE: By the way, a protocol plugin system was recently added to GhostFS (kudos\r\nto Pericles (@gogo40)), so adding support to new protocols may be relatively easy.\r\nTake a look at /protocol for a better understanding of how it works.\r\n\r\nFor further information, feel free to reach me at:\r\n    raphael.scarv@gmail.com\r\n\r\nThanks.\r\n\r\n### Contributors\r\n\r\n* RAPHAEL S. CARVALHO (@raphaelsc)\r\n- M: raphael.scarv@gmail.com\r\n- W: http://raphaelsc.github.io/\r\n- G: https://github.com/raphaelsc/\r\n- T: Sat Jan  9 02:58:52 BRST 2016\r\n\r\n* PÃ‰RICLES L. MACHADO (@gogo40)\r\n- M: eu@gogo40.com\r\n- W: http://gogo40.com\r\n- G: https://github.com/gogo40\r\n- T: Sat Jan  9 19:49:10 BRST 2016\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}